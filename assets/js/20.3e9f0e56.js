(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{238:function(e,t,a){"use strict";a.r(t);var s=a(10),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"news"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#news"}},[e._v("#")]),e._v(" News")]),e._v(" "),a("h2",{attrs:{id:"added-gif-showcase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#added-gif-showcase"}},[e._v("#")]),e._v(" Added GIF showcase")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/showcase/gifs/"}},[e._v("Creating GIFs")])],1),e._v(" "),a("h2",{attrs:{id:"updated-texture-tutorials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updated-texture-tutorials"}},[e._v("#")]),e._v(" Updated texture tutorials")]),e._v(" "),a("p",[e._v("Up to this point, we created textures manually everytime. I've pulled out the texture creation code into a new "),a("code",[e._v("texture.rs")]),e._v(" file and included it every tutorial from the "),a("RouterLink",{attrs:{to:"/beginner/tutorial5-textures/#cleaning-things-up"}},[e._v("textures tutorial")]),e._v(" onward.")],1),e._v(" "),a("h2",{attrs:{id:"fixed-panics-do-to-not-specifying-the-correct-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fixed-panics-do-to-not-specifying-the-correct-usage"}},[e._v("#")]),e._v(" Fixed panics do to not specifying the correct "),a("code",[e._v("usage")])]),e._v(" "),a("p",[e._v("Wgpu has become more strict about what "),a("code",[e._v("BufferUsage")]),e._v("s and "),a("code",[e._v("TextureUsage")]),e._v("s are required when performing certain operations. For example int the "),a("RouterLink",{attrs:{to:"/intermediate/windowless/"}},[e._v("Wgpu without a window example")]),e._v(", the "),a("code",[e._v("texture_desc")]),e._v(" only specified the usage to by "),a("code",[e._v("COPY_SRC")]),e._v(". This caused a crash when the "),a("code",[e._v("texture")]),e._v(" was used as a render target. Adding "),a("code",[e._v("OUTPUT_ATTACHMENT")]),e._v(" fixed the issue.")],1),e._v(" "),a("h2",{attrs:{id:"updating-winit-from-0-20-0-alpha5-to-0-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating-winit-from-0-20-0-alpha5-to-0-20"}},[e._v("#")]),e._v(" Updating Winit from 0.20.0-alpha5 to 0.20")]),e._v(" "),a("p",[e._v("There were a lot of small changes to how the dpi stuff works. You can see all the changes "),a("a",{attrs:{href:"https://github.com/rust-windowing/winit/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("in the changelog"),a("OutboundLink")],1),e._v(". That means that some of the tutorials had to change.")]),e._v(" "),a("ul",[a("li",[e._v("I've removed "),a("code",[e._v("hidpi_factor")]),e._v(" from "),a("code",[e._v("State")]),e._v(" entirely. They removed the "),a("code",[e._v("hidpi_factor()")]),e._v(" method from "),a("code",[e._v("winit::window::Window")]),e._v(", and changed "),a("code",[e._v("inner_size()")]),e._v(" to return "),a("code",[e._v("PhysicalSize")]),e._v(" instead of "),a("code",[e._v("LogicalSize")]),e._v(", so we don't need to store the "),a("code",[e._v("hidpi_factor")]),e._v(" anymore.")]),e._v(" "),a("li",[a("code",[e._v("update_hidpi_and_resize")]),e._v(" is no more. Since "),a("code",[e._v("ScaleFactorChanged")]),e._v(" passes in the windows new "),a("code",[e._v("PhysicalSize")]),e._v(", we can simply use "),a("code",[e._v("resize()")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("State::size")]),e._v(" is now "),a("code",[e._v("PhysicalSize<u32>")]),e._v(" instead of the pre 0.20 "),a("code",[e._v("LogicalSize")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("EventsCleared")]),e._v(" is now "),a("code",[e._v("MainEventsCleared")]),e._v(".")])]),e._v(" "),a("p",[e._v("I may have missed a change, but I made sure that all the examples compile an run, so if you have trouble with your code you can use them as a reference.")]),e._v(" "),a("h2",{attrs:{id:"changed-tutorial-examples-to-use-a-src-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changed-tutorial-examples-to-use-a-src-directory"}},[e._v("#")]),e._v(" Changed tutorial examples to use a src directory")]),e._v(" "),a("p",[e._v("I wasn't using the traditional cargo binary folder setup. I've changed it to the standardized form now.")]),e._v(" "),a("h2",{attrs:{id:"updating-to-0-4-from-0-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating-to-0-4-from-0-3"}},[e._v("#")]),e._v(" Updating to 0.4 from 0.3")]),e._v(" "),a("p",[e._v("There are a few things that have changed:")]),e._v(" "),a("ol",[a("li",[e._v("The use of "),a("code",[e._v("Instance")]),e._v(" has been removed. Creating a "),a("code",[e._v("Surface")]),e._v(" and requesting an "),a("code",[e._v("Adapter")]),e._v(" are done as follows.")])]),e._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" surface "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" wgpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("::")]),e._v("Surface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" adapter "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" wgpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("::")]),e._v("Adapter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("wgpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("::")]),e._v("RequestAdapterOptions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("Default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("unwrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// needs to be unwrapped")]),e._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("The "),a("code",[e._v("request_device")]),e._v(" method now returns a "),a("code",[e._v("(Device, Queue)")]),e._v(" tuple. This means that you can borrow the "),a("code",[e._v("Queue")]),e._v(" mutably while using the "),a("code",[e._v("Device")]),e._v(" immutably. Because of this change, submitting "),a("code",[e._v("CommandBuffer")]),e._v("s to the queue uses the "),a("code",[e._v("submit")]),e._v(" method on the "),a("code",[e._v("Queue")]),e._v(" directly.")])]),e._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("submit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    encoder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("finish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("The "),a("code",[e._v("create")]),e._v(" method on "),a("code",[e._v("Surface")]),e._v(" takes in any struct that implements the "),a("code",[e._v("HasRawWindow")]),e._v(" trait, instead of a "),a("code",[e._v("RawWindowHandle")]),e._v(". This means that the "),a("code",[e._v('raw-window-handle = "0.3"')]),e._v(" line in "),a("code",[e._v("Cargo.toml")]),e._v(" is no longer needed.")])]),e._v(" "),a("p",[e._v("I don't know if this is a change from 0.4, but you use "),a("code",[e._v('wgpu = "0.4"')]),e._v(" line in dependencies instead of the "),a("code",[e._v("[dependencies.wgpu]")]),e._v(" as wgpu will determine the best back end for you.")]),e._v(" "),a("h2",{attrs:{id:"new-recent-articles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-recent-articles"}},[e._v("#")]),e._v(" New/Recent Articles")]),e._v(" "),a("RecentArticles")],1)}),[],!1,null,null,null);t.default=n.exports}}]);